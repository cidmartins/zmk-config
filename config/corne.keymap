/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer0 {
// -----------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  | BKSP | 
// | CTRL  |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  '   | 
// | SHFT  |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | SHFT | 
//                    | RGUI | SPC | MO1 |     | MO2 | ENT | LALT|
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BACKSPACE
                &kp LEFT_CONTROL &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMICOLON &kp SINGLE_QUOTE
                &kp LEFT_SHIFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp RIGHT_SHIFT
                &kp RIGHT_GUI &kp SPACE &mo 1 &mo 2 &kp ENTER &kp LEFT_ALT
            >;
        };

        layer1 {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  UP |  9  |  0  |      | 
// | CTRL |     | ALT | TAB | TAB |     |     |  8  | LFT | DWN | RGT | HOME| PGUP | 
// | SHFT |     |     |     |LC(T)|     |     | BSP | DEL |     | END | PGDN|      | 
//                    | RGUI | SPC|     |     |     | ENT | LALT|
            bindings = <
                &kp ESCAPE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp UP &kp N9 &kp N0 &trans
                &kp LEFT_CONTROL &trans &kp LEFT_ALT &kp TAB &kp TAB &trans &kp N8 &kp LEFT &kp DOWN &kp RIGHT &kp HOME &kp PAGE_UP
                &kp LEFT_SHIFT &trans &trans &trans &kp LC(TAB) &trans &kp BACKSPACE &kp DELETE &trans &kp END &kp PAGE_DOWN
                &kp RIGHT_GUI &kp SPACE &trans &trans &kp ENTER &kp LEFT_ALT
            >;
        };

        layer2 {
// ----------------------------------------------------------------------------------------- *
// | ESC  |  !  |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  | BKSP | 
// |      |     |     |     |     |     |     |  -  |  =  | {   | }   | "|" | GRAVE| 
// |      | TILD|     |     |     |     |     | _   | +   | [   | ]   | \   |      | 
//                    | RGUI| SPC |     |     |     | ENT | LALT |
        bindings = <
                &kp ESCAPE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp BACKSPACE
                &trans &trans &trans &trans &trans &trans &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &kp PIPE &kp GRAVE
                &trans &kp TILDE &trans &trans &trans &trans &kp UNDER &kp PLUS &kp LBKT &kp RBKT &kp BSLH &kp TILDE
                &kp RIGHT_GUI &kp SPACE &trans &trans &kp ENTER &kp LEFT_ALT
                >;
        };

        layer3 {
// -----------------------------------------------------------------------------------------
// | BT1  |   BT3  | RCLK| MS_U| LCLK|         |     |  F1 |  F2 | BTCLAL|  F4 |  F5 |  F6  |
// | BT2  |        | MS_L| MS_D| MS_R| VOL_UP  |     |  F7 | btclear| bt2| bt1|  F11|  F12 |
// | BTCLR|        |     |     |     | VOL_DOWN|     |  F3 | F8  | F9  | F10 |     |  RESET
//                          | RGUI | SPC |     |     |     | ENT | LALT |
        bindings = <
                &bt BT_SEL 1 &bt BT_SEL 3 &mkp RCLK &mmv MOVE_UP &mkp LCLK &out OUT_TOG &kp F2 &bt BT_CLR_ALL &kp F4 &kp F5 &kp F6
                &bt BT_SEL 0 &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp C_VOLUME_UP &kp F7 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1 &kp F11 &kp F12
                &bt BT_CLR &trans &trans &trans &trans &kp C_VOLUME_DOWN &kp F3 &kp F8 &kp F9 &kp F10 &trans &sys_reset
                &kp RIGHT_GUI &kp SPACE &trans &trans &kp ENTER &kp LEFT_ALT
                >;
        };
    };

     conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
